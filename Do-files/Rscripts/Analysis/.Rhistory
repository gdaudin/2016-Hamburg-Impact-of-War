rm(list = ls())
library(dplyr)
library(tidyr)
hotelling = read.csv("/Volumes/GoogleDrive/My Drive/Hamburg/database_csv/temp_for_hotelling.csv")
df = hotelling
classification = "product_sitc_simplEN"
unique(hotelling$period_str)
period1 = "Peace 1749-1755"
period2 = "War 1756-1763"
plantation_yesno = 0
direction = "national"
X_I = "Exports"
df = hotelling
names(df)[names(df) == classification] = "class"
if(direction=="national"){
if(classification=="product_sitc_simplEN") df = df[df$best_guess_national_product==1,]
if(classification=="sitc_aggr") df = df[df$best_guess_national_product==1,]
if(classification=="partner_grouping_8") df = df[df$best_guess_national_partner==1,]
}
df = df %>% group_by(year, class, export_import, period_str) %>%
summarize(sum_value = sum(value))
if(X_I=="Exports" | X_I=="Imports"){
df = df[df$export_import==X_I,]
df = df %>% group_by(year) %>% mutate(percent= sum_value/sum(sum_value, na.rm = TRUE))
}else{
df = df %>% group_by(year, war, class, period_str) %>%
summarize(sum_value_xi = sum(sum_value, na.rm = TRUE))
df = df %>% group_by(year) %>% mutate(percent= sum_value_xi/sum(sum_value_xi, na.rm = TRUE))
}
df = df[(df$period_str == period1 | df$period_str == period2),]
df = df %>% group_by(year) %>% mutate(percent = ifelse(is.na(percent), min(percent/2, na.rm = TRUE), percent))
df$ln_percent = log(df$percent)
df_for_manova = data.frame(year=df$year, class=df$class, period = df$period_str, ln_percent=df$ln_percent)
df_for_manova = df_for_manova %>% pivot_wider(names_from = class, values_from = ln_percent)
View(df_for_manova)
man = manova(cbind(df_for_manova[c(3:14)]) ~ df_for_manova$period)
View(df)
View(df_for_manova)
data.matrix(df_for_manova[3:ncol(df_for_manova)])
data.matrix(df_for_manova[df_for_manova$period==period1, 3:ncol(df_for_manova)])
man = hotelling.test(matrix_period1, matrix_period2)
install.packages(phonTools)
install.packages("phonTools")
library(phonTools)
man = hotelling.test(matrix_period1, matrix_period2)
matrix_period1 = data.matrix(df_for_manova[df_for_manova$period==period1, 3:ncol(df_for_manova)])
matrix_period2 = data.matrix(df_for_manova[df_for_manova$period==period2, 3:ncol(df_for_manova)])
man = hotelling.test(matrix_period1, matrix_period2)
View(hotelling)
library(dplyr)
library(tidyr)
hotelling = read.csv("/Volumes/GoogleDrive/My Drive/Hamburg/database_csv/temp_for_hotelling.csv")
df = hotelling
View(df)
View(df)
unique(df$period_str)
classification = "product_sitc_EN"
plantation_yesno = 1
direction=="national"
direction="national"
X_I="Exports"
period1 = "Peace 1749-1755"
period1 = "Peace 1764-1777"
period2 = "War 1778-1783"
names(df)[names(df) == classification] = "class"
if(direction=="national"){
if(classification=="product_sitc_simplEN") df = df[df$best_guess_national_product==1,]
if(classification=="sitc_aggr") df = df[df$best_guess_national_product==1,]
if(classification=="partner_grouping_8") df = df[df$best_guess_national_partner==1,]
}
df = df %>% group_by(year, class, export_import, period_str) %>%
summarize(sum_value = sum(value))
if(plantation_yesno==0 & classification=="product_sitc_simplEN") df = df[df$product_sitc_simplEN!="Plantation foodstuff",]
if(X_I=="Exports" | X_I=="Imports"){
df = df[df$export_import==X_I,]
df = df %>% group_by(year) %>% mutate(percent= sum_value/sum(sum_value, na.rm = TRUE))
}else{
df = df %>% group_by(year, war, class, period_str) %>%
summarize(sum_value_xi = sum(sum_value, na.rm = TRUE))
df = df %>% group_by(year) %>% mutate(percent= sum_value_xi/sum(sum_value_xi, na.rm = TRUE))
}
df = df[(df$period_str == period1 | df$period_str == period2),]
df = df %>% group_by(year) %>% mutate(percent = ifelse(is.na(percent), min(percent/2, na.rm = TRUE), percent))
df$ln_percent = log(df$percent)
df_for_manova = data.frame(year=df$year, class=df$class, period = df$period_str, ln_percent=df$ln_percent)
df_for_manova = df_for_manova %>% pivot_wider(names_from = class, values_from = ln_percent)
matrix_period1 = data.matrix(df_for_manova[df_for_manova$period==period1, 3:ncol(df_for_manova)])
matrix_period2 = data.matrix(df_for_manova[df_for_manova$period==period2, 3:ncol(df_for_manova)])
View(df_for_manova)
View(df_for_manova)
df = na.rm(df)
df = rm.na(df)
df = na.omit(df)
df_for_manova = data.frame(year=df$year, class=df$class, period = df$period_str, ln_percent=df$ln_percent)
df_for_manova = df_for_manova %>% pivot_wider(names_from = class, values_from = ln_percent)
rlang::last_error()
View(df_for_manova)
df = na.omit(df$class)
df_for_manova = data.frame(year=df$year, class=df$class, period = df$period_str, ln_percent=df$ln_percent)
df = hotelling
names(df)[names(df) == classification] = "class"
if(direction=="national"){
if(classification=="product_sitc_simplEN") df = df[df$best_guess_national_product==1,]
if(classification=="sitc_aggr") df = df[df$best_guess_national_product==1,]
if(classification=="partner_grouping_8") df = df[df$best_guess_national_partner==1,]
}
df = df %>% group_by(year, class, export_import, period_str) %>%
summarize(sum_value = sum(value))
if(plantation_yesno==0 & classification=="product_sitc_simplEN") df = df[df$product_sitc_simplEN!="Plantation foodstuff",]
if(X_I=="Exports" | X_I=="Imports"){
df = df[df$export_import==X_I,]
df = df %>% group_by(year) %>% mutate(percent= sum_value/sum(sum_value, na.rm = TRUE))
}else{
df = df %>% group_by(year, war, class, period_str) %>%
summarize(sum_value_xi = sum(sum_value, na.rm = TRUE))
df = df %>% group_by(year) %>% mutate(percent= sum_value_xi/sum(sum_value_xi, na.rm = TRUE))
}
df = df[(df$period_str == period1 | df$period_str == period2),]
df = df %>% group_by(year) %>% mutate(percent = ifelse(is.na(percent), min(percent/2, na.rm = TRUE), percent))
df$ln_percent = log(df$percent)
any(is.na(df))
View(df)
df = na.omit(df)
View(df)
View(df)
df = df %>% drop_na("class")
View(df)
na.omit(df)
df = df[df$class!="",]
df
df_for_manova = data.frame(year=df$year, class=df$class, period = df$period_str, ln_percent=df$ln_percent)
df_for_manova = df_for_manova %>% pivot_wider(names_from = class, values_from = ln_percent)
matrix_period1 = data.matrix(df_for_manova[df_for_manova$period==period1, 3:ncol(df_for_manova)])
matrix_period2 = data.matrix(df_for_manova[df_for_manova$period==period2, 3:ncol(df_for_manova)])
man = hotelling.test(matrix_period1, matrix_period2)
library(dplyr)
library(tidyr)
man = hotelling.test(matrix_period1, matrix_period2)
library("hotelling")
install.packages(hotelling)
install.packages(hotelling)
install.packages(Hotelling)
install.packages("Hotelling")
library(Hotelling)
man = hotelling.test(matrix_period1, matrix_period2)
library(dplyr)
library(tidyr)
library(Hotelling)
library(ggplot2)
HamburgDir = "/Volumes/GoogleDrive/My Drive/Hamburg/"
RscriptDir = "Paper/Do-files/Rscripts/"
GraphDir = "Graphs/"
NewgraphsDir = "New graphs/"
DfDir = "Dataframe/"
source(paste(HamburgDir,RscriptDir,DfDir, "fcomposition_trade_df.R", sep = "" ))
hotelling = read.csv(paste(HamburgDir, "temp_for_hotelling.csv", ))
hotelling = read.csv(paste(HamburgDir, "temp_for_hotelling.csv", sep=""))
source(paste(HamburgDir,RscriptDir,DfDir, Database_csvDir, "fcomposition_trade_df.R", sep = "" ))
Database_csvDir = "database_csv/"
source(paste(HamburgDir,RscriptDir,DfDir, Database_csvDir, "fcomposition_trade_df.R", sep = "" ))
source(paste(HamburgDir,RscriptDir,DfDir, "fcomposition_trade_df.R", sep = "" ))
hotelling = read.csv(paste(HamburgDir,Database_csvDir,"temp_for_hotelling.csv", sep=""))
violin_df = fcomposition_trade_df.R(hotelling)
violin_df = fcomposition_trade_df(hotelling)
library(dplyr)
library(tidyr)
library(Hotelling)
library(ggplot2)
HamburgDir = "/Volumes/GoogleDrive/My Drive/Hamburg/"
RscriptDir = "Paper/Do-files/Rscripts/"
GraphDir = "Graphs/"
NewgraphsDir = "New graphs/"
DfDir = "Dataframe/"
Database_csvDir = "database_csv/"
source(paste(HamburgDir,RscriptDir,DfDir, "fcomposition_trade_df.R", sep = "" ))
hotelling = read.csv(paste(HamburgDir,Database_csvDir,"temp_for_hotelling.csv", sep=""))
unique(hotelling$period_str)
unique(hotelling$export_import)
rm(list=ls())
library(dplyr)
library(tidyr)
library(Hotelling)
library(ggplot2)
HamburgDir = "/Volumes/GoogleDrive/My Drive/Hamburg/"
RscriptDir = "Paper/Do-files/Rscripts/"
GraphDir = "Graphs/"
NewgraphsDir = "New graphs/"
DfDir = "Dataframe/"
Database_csvDir = "database_csv/"
source(paste(HamburgDir,RscriptDir,DfDir, "fcomposition_trade_df.R", sep = "" ))
hotelling = read.csv(paste(HamburgDir,Database_csvDir,"temp_for_hotelling.csv", sep=""))
violin_df = fcomposition_trade_df(hotelling, "Peace 1749-1755","Peace 1764-1777", 1, "national", "Exports", "product_sitc_simplEN")
View(violin_df)
View(violin_df)
View(violin_df)
df = hotelling
classification="product_sitc_simplEN"
plantation_yesno = 1
plantation_yesno = 1
direction = "national"
X_I = "Exports"
period1 = "Peace 1749-1755"
period2 = "Peace 1764-1777"
names(df)[names(df) == classification] = "class"
View(df)
if(direction=="national"){
if(classification=="product_sitc_simplEN") df = df[df$best_guess_national_product==1,]
if(classification=="sitc_aggr") df = df[df$best_guess_national_product==1,]
if(classification=="partner_grouping_8") df = df[df$best_guess_national_partner==1,]
}
df = df %>% group_by(year, class, export_import, period_str) %>%
summarize(sum_value = sum(value))
View(df)
View(hotelling)
View(df)
df = hotelling
names(df)[names(df) == classification] = "class"
if(direction=="national"){
if(classification=="product_sitc_simplEN") df = df[df$best_guess_national_product==1,]
if(classification=="sitc_aggr") df = df[df$best_guess_national_product==1,]
if(classification=="partner_grouping_8") df = df[df$best_guess_national_partner==1,]
}
df = df %>% group_by(year, class, export_import, period_str) %>%
summarize(sum_value = sum(value, na.rm = TRUE))
any(is.na(df))
if(plantation_yesno==0 & classification=="product_sitc_simplEN") df = df[df$product_sitc_simplEN!="Plantation foodstuff",]
if(X_I=="Exports" | X_I=="Imports"){
df = df[df$export_import==X_I,]
df = df %>% group_by(year) %>% mutate(percent= sum_value/sum(sum_value, na.rm = TRUE))
}else{
df = df %>% group_by(year, war, class, period_str) %>%
summarize(sum_value_xi = sum(sum_value, na.rm = TRUE))
df = df %>% group_by(year) %>% mutate(percent= sum_value_xi/sum(sum_value_xi, na.rm = TRUE))
}
View(df)
any(is.na(df))
df = df[(df$period_str == period1 | df$period_str == period2),]
df = df[df$class!="",]
df = df %>% group_by(year) %>% mutate(percent = ifelse(is.na(percent), min(percent/2, na.rm = TRUE), percent))
df$ln_percent = log(df$percent)
View(df)
rm(list = ls())
library(dplyr)
library(tidyr)
library(Hotelling)
library(ggplot2)
HamburgDir = "/Volumes/GoogleDrive/My Drive/Hamburg/"
RscriptDir = "Paper/Do-files/Rscripts/"
GraphDir = "Graphs/"
NewgraphsDir = "New graphs/"
DfDir = "Dataframe/"
Database_csvDir = "database_csv/"
source(paste(HamburgDir,RscriptDir,DfDir, "fcomposition_trade_df.R", sep = "" ))
hotelling = read.csv(paste(HamburgDir,Database_csvDir,"temp_for_hotelling.csv", sep=""))
violin_df = fcomposition_trade_df(hotelling, "Peace 1749-1755","Peace 1764-1777", 1, "national", "Exports", "product_sitc_simplEN")
GeomSplitViolin <- ggproto("GeomSplitViolin", GeomViolin,
draw_group = function(self, data, ..., draw_quantiles = NULL) {
data <- transform(data, xminv = x - violinwidth * (x - xmin), xmaxv = x + violinwidth * (xmax - x))
grp <- data[1, "group"]
newdata <- plyr::arrange(transform(data, x = if (grp %% 2 == 1) xminv else xmaxv), if (grp %% 2 == 1) y else -y)
newdata <- rbind(newdata[1, ], newdata, newdata[nrow(newdata), ], newdata[1, ])
newdata[c(1, nrow(newdata) - 1, nrow(newdata)), "x"] <- round(newdata[1, "x"])
if (length(draw_quantiles) > 0 & !scales::zero_range(range(data$y))) {
stopifnot(all(draw_quantiles >= 0), all(draw_quantiles <=
1))
quantiles <- ggplot2:::create_quantile_segment_frame(data, draw_quantiles)
aesthetics <- data[rep(1, nrow(quantiles)), setdiff(names(data), c("x", "y")), drop = FALSE]
aesthetics$alpha <- rep(1, nrow(quantiles))
both <- cbind(quantiles, aesthetics)
quantile_grob <- GeomPath$draw_panel(both, ...)
ggplot2:::ggname("geom_split_violin", grid::grobTree(GeomPolygon$draw_panel(newdata, ...), quantile_grob))
}
else {
ggplot2:::ggname("geom_split_violin", GeomPolygon$draw_panel(newdata, ...))
}
})
geom_split_violin <- function(mapping = NULL, data = NULL, stat = "ydensity", position = "identity", ...,
draw_quantiles = NULL, trim = TRUE, scale = "area", na.rm = FALSE,
show.legend = NA, inherit.aes = TRUE) {
layer(data = data, mapping = mapping, stat = stat, geom = GeomSplitViolin,
position = position, show.legend = show.legend, inherit.aes = inherit.aes,
params = list(trim = trim, scale = scale, draw_quantiles = draw_quantiles, na.rm = na.rm, ...))
}
ggplot(peace49_55_peace64_77_1_X_sitc, aes(class, ln_percent, fill = period_str)) + geom_split_violin()
ggplot(violin_df, aes(class, ln_percent, fill = period_str)) + geom_split_violin()
ggplot(violin_df, aes(class, ln_percent, fill = period_str)) + geom_split_violin() + coord_flip()
rm(list= ls())
library(dplyr)
library(tidyr)
library(Hotelling)
library(ggplot2)
HamburgDir = "/Volumes/GoogleDrive/My Drive/Hamburg/"
RscriptDir = "Paper/Do-files/Rscripts/"
GraphDir = "Graphs/"
NewgraphsDir = "New graphs/"
DfDir = "Dataframe/"
Database_csvDir = "database_csv/"
source(paste(HamburgDir,RscriptDir,DfDir, "fcomposition_trade_df.R", sep = "" ))
hotelling = read.csv(paste(HamburgDir,Database_csvDir,"temp_for_hotelling.csv", sep=""))
peace49_55_peace64_77_1_X_sitc = fcomposition_trade_df(hotelling, "Peace 1749-1755","Peace 1764-1777", 1, "national", "Exports", "product_sitc_simplEN")
ggplot(peace49_55_peace64_77_1_X_sitc, aes(class, ln_percent, fill = period_str)) +
geom_violin() + coord_flip()
peace49_55_peace64_77_1_X_sitc = fcomposition_trade_df(hotelling, "Peace 1749-1755","Peace 1764-1777", 1, "national", "Exports", "product_sitc_simplEN")
ggplot(peace49_55_peace64_77_1_X_sitc, aes(class, ln_percent, fill = period_str)) +
geom_violin() + coord_flip() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = 'bottom',
panel.background = element_blank(),
panel.grid.major.y = element_line(color = "grey", size = 0.12)
)
ggplot(peace49_55_peace64_77_1_X_sitc, aes(class, ln_percent, fill = period_str)) +
geom_violin() + coord_flip() +
theme_few() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = 'bottom',
panel.background = element_blank(),
panel.grid.major.y = element_line(color = "grey", size = 0.12)
)
library(ggthemes)
library(tidyverse)
loadfonts()
ggplot(peace49_55_peace64_77_1_X_sitc, aes(class, ln_percent, fill = period_str)) +
geom_violin() + coord_flip() +
theme_few() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = 'bottom',
panel.background = element_blank(),
panel.grid.major.y = element_line(color = "grey", size = 0.12)
)
library(dplyr)
library(tidyr)
library(Hotelling)
library(ggplot2)
library(ggthemes)
library(tidyverse)
loadfonts()
HamburgDir = "/Volumes/GoogleDrive/My Drive/Hamburg/"
RscriptDir = "Paper/Do-files/Rscripts/"
GraphDir = "Graphs/"
NewgraphsDir = "New graphs/"
DfDir = "Dataframe/"
Database_csvDir = "database_csv/"
source(paste(HamburgDir,RscriptDir,DfDir, "fcomposition_trade_df.R", sep = "" ))
hotelling = read.csv(paste(HamburgDir,Database_csvDir,"temp_for_hotelling.csv", sep=""))
#fcomposition_trade_df(df, period1, period2, plantation_yesno, direction, X_I, classification)
# periods can be:
#"Peace 1749-1755" "War 1756-1763" "Peace 1764-1777" "War 1778-1783"
# "Peace 1784-1792" "War 1793-1807" "Blockade 1808-1815" "Peace 1816-1840"
peace49_55_peace64_77_1_X_sitc = fcomposition_trade_df(hotelling, "Peace 1749-1755","Peace 1764-1777", 1, "national", "Exports", "product_sitc_simplEN")
peace49_55_peace64_77_1_I_sitc = fcomposition_trade_df(hotelling, "Peace 1749-1755","Peace 1764-1777", 1, "national", "Imports", "product_sitc_simplEN")
peace49_55_peace64_77_1_sitc = data.frame(rbind(peace49_55_peace64_77_1_X_sitc,
peace49_55_peace64_77_1_I_sitc
))
View(peace49_55_peace64_77_1_I_sitc)
ggplot(peace49_55_peace64_77_1_sitc, aes(class, ln_percent, fill = period_str)) +
geom_violin() + coord_flip() +
theme_few() +
theme(
axis.title = element_blank(),
legend.title = element_blank(),
legend.position = 'bottom',
panel.background = element_blank(),
panel.grid.major.y = element_line(color = "grey", size = 0.12)
) +
facet_wrap(~export_import)
rm(peace49_55_peace64_77_1_X_sitc, peace49_55_peace64_77_1_I_sitc)
rm(peace49_55_peace64_77_1_sitc)
peace49_55_peace64_77_1_sitc = data.frame(rbind(
fcomposition_trade_df(hotelling, "Peace 1749-1755","Peace 1764-1777", 1, "national", "Exports", "product_sitc_simplEN"),
fcomposition_trade_df(hotelling, "Peace 1749-1755","Peace 1764-1777", 1, "national", "Imports", "product_sitc_simplEN")
))
source(paste(HamburgDir,RscriptDir,GraphDir, "fviolin_plot.R", sep = "" ))
source(paste(HamburgDir,RscriptDir,GraphDir, "fviolin_plot.R", sep = "" ))
peace49_55_peace64_77_1_sitc = fviolin_plot(peace49_55_peace64_77_1_sitc, 1)
print(peace49_55_peace64_77_1_sitc)
peace49_55_peace64_77_1_sitc = fviolin_plot(peace49_55_peace64_77_1_sitc, 1)
print(peace49_55_peace64_77_1_sitc)
rm(peace49_55_peace64_77_1_sitc)
library(dplyr)
library(tidyr)
library(Hotelling)
library(ggplot2)
library(ggthemes)
library(tidyverse)
loadfonts()
HamburgDir = "/Volumes/GoogleDrive/My Drive/Hamburg/"
RscriptDir = "Paper/Do-files/Rscripts/"
GraphDir = "Graphs/"
NewgraphsDir = "New graphs/"
DfDir = "Dataframe/"
Database_csvDir = "database_csv/"
source(paste(HamburgDir,RscriptDir,DfDir, "fcomposition_trade_df.R", sep = "" ))
source(paste(HamburgDir,RscriptDir,GraphDir, "fviolin_plot.R", sep = "" ))
